# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: ubuntu-latest
#     steps:
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'Vagabundocker Hub'
#         repository: 'vagabundocker/webchat-front'
#         command: 'buildAndPush'
#         Dockerfile: '**/Dockerfile'
#         tags: |
#           $(tag)
- stage: provision
  displayName: 'Terraforming on Azure'
  jobs:
  - job: provision
    displayName: 'Provision infrastructure'
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: Terraform
    steps:
    - script: |
        set -e

        cd infrastructure
        terraform init -input=false
        terraform apply -input=false -auto-approve
      name: 'RunTerraform'
      displayName: 'Run Terraform'
      env:
        ARM_CLIENT_ID: $(ARM_CLIENT_ID)
        ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
        ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
        ARM_TENANT_ID: $(ARM_TENANT_ID)
        TF_VAR_imagebuild: $(tag)

- stage: build
  displayName: 'Build'
  jobs:
  - job: build_test
    displayName: 'Build and test'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run build
      displayName: 'npm install, build'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
    - task: PublishPipelineArtifact@0
      inputs:
        targetPath: '$(System.ArtifactsDirectory)'

- stage: deploy
  displayName: 'Deploy'
  dependsOn: provision
  jobs:
  - deployment: deploy
    displayName: 'Deploy'
    environment: dev
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              downloadPath: '$(System.DefaultWorkingDirectory)'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Vagachat ARM front'
              appType: 'webAppLinux'
              appName: 'webchatfront-dev-appservice'
              runtimeStack: 'NODE|14-lts'
              startUpCommand: 'npm run start'
